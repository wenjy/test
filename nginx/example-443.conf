server {
    # 将ssl作为listen指令的参数，这是官方推荐的做法。如果不这么写，则使用ssl指令开开启ssl的支持
    listen  443 ssl;
    server_name  example.com;
    #ssl on;

    # 设置用于发送数据的缓冲区的大小。默认大小是 16K，当发送数据大的响应时，这是最小的开销。
    # 为了最小化第一个字节的时间，使用较小的值可能是有益的
    ssl_buffer_size 4k;
    # 指定PEM格式的证书文件
    ssl_certificate           /etc/nginx/ssl/example.com.cer;
    # 指定PEM格式的密钥文件路径
    ssl_certificate_key       /etc/nginx/ssl/example.com.key;
    # openssl dhparam -out dhparam.pem 2048
    ssl_dhparam               /etc/nginx/ssl/dhparam.pem;
    # 设置存储会话参数的缓存的类型和大小，所有的nginx工作进程共享ssl会话缓存大小为10m
    ssl_session_cache         shared:SSL:10m;
    # 指定客户端可以重用会话参数的时间
    ssl_session_timeout       5m;
    # 启用指定的协议
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    # 指定启用加密算法 HIGH:!aNULL:!MD5
    ssl_ciphers               ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
    # 设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件
    ssl_prefer_server_ciphers on;

    index  index.html index.htm index.php;

    access_log            off;#/www/wwwlogs/example.com.log combined;
    error_log             off;#/www/wwwlogs/example.com.error.log;
    add_header              'Strict-Transport-Security' 'max-age=60; includeSubdomains; preload';
    add_header              'X-Content-Type-Options' 'nosniff';

    location /.well-known {
        root      /www/wwwroot;
        index     index.html index.htm index.php;
    }

    location / {
        proxy_pass            http://localhost:3000/;
        proxy_read_timeout    90;
        proxy_connect_timeout 90;
        proxy_set_header      Host $host;
        proxy_set_header      X-Real-IP $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      Proxy "";
    }
}
